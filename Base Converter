from copy import deepcopy
def baseconverter(num):
  #input validation
  try:
    num = int(num)
  except ValueError:
    print("Invalid input, you can only type positive integer as argument.")
  #creating print range from 1 to inputted number
  for i in range(1, num + 1):
    num = i
    num1, num2, num3 = deepcopy(num), deepcopy(num), deepcopy(num)
    #octal conversion
    remainder_list = []
    while num1 >= 8:
        remainder_list.append(num1 % 8)
        num1 = num1 // 8
    octal = str(num1) + "".join([str(i) for i in remainder_list][::-1])

    #hexadecimal conversion
    remainder_list = []
    hex_dict = dict(zip(range(10,16), "ABCDEF"))
    #print(hex_dict)
    if 9 < num2 < 16:
      hexadecimal = hex_dict[num2 % 16]
    else: 
      while num2 >= 16:
        if num2 % 16 in hex_dict:
          remainder_list.append(hex_dict[num2 % 16])
        else:
          remainder_list.append(num2 % 16)
        num2 = num2 // 16
      hexadecimal = str(num2) + "".join([str(i) for i in remainder_list][::-1])
    
    #binary conversion
    remainder_list = []
    while num3 >= 2:
        remainder_list.append(num3 % 2)
        num3 = num3 // 2
    binary = str(num3) + "".join([str(i) for i in remainder_list][::-1])

    print(num, octal, hexadecimal, binary, sep = "\t")
    print(num, oct(num), hex(num), bin(num), sep = "\t", end = "\n\n")

baseconverter(17)
